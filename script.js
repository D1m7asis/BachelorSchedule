const lecture_time = [
    "‚è© 8:30<br>‚è™10:00",
    "‚è©10:10<br>‚è™11:40",
    "‚è©11:50<br>‚è™13:20",
    "‚è©13:50<br>‚è™15:20",
    "‚è©15:30<br>‚è™17:00",
    "‚è©17:10<br>‚è™18:40",
    "‚è©18:50<br>‚è™20:20"
];

let weekType = '-1'

$(document).ready(function () {
    $('#select-state').selectize({
        sortField: 'text'
    });

    $.getJSON('schedule.json', function (data) {
        const select = $('#select-state')[0].selectize;
        select.clearOptions(); // –û—á–∏—Å—Ç–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ–ø—Ü–∏–∏
        select.addOption({value: '5', text: '5 –ø–æ–¥–≥—Ä—É–ø–ø–∞'});
        select.setValue('5', false);
    });

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–∞—è –Ω–µ–¥–µ–ª—è (–≤–µ—Ä—Ö–Ω—è—è –∏–ª–∏ –Ω–∏–∂–Ω—è—è)
    function updateDateInfo() {
        const today = new Date();
        const dateInfo = formatDate(today);
        $('#today-date').text('–°–µ–≥–æ–¥–Ω—è: ' + dateInfo);
    }

    function updateCurrentClassInfo() {
        const now = new Date();
        const currentDay = ["–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ", "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫", "–°—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä–≥", "–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞"][now.getDay()];
        const currentTime = now.getHours() * 60 + now.getMinutes(); // –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ –º–∏–Ω—É—Ç–∞—Ö

        // –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–∞—Ä –≤ –º–∏–Ω—É—Ç–∞—Ö
        const classTimes = lecture_time.map(time => {
            const times = time.split('<br>');
            const start = times[0].split('‚è©')[1].split(':');
            const end = times[1].split('‚è™')[1].split(':');
            return {
                start: parseInt(start[0]) * 60 + parseInt(start[1]),
                end: parseInt(end[0]) * 60 + parseInt(end[1])
            };
        });

        let currentClass = null;
        let timeLeft = 0;

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–∞—è –ø–∞—Ä–∞ —Å–µ–π—á–∞—Å –∏–¥–µ—Ç
        for (let i = 0; i < classTimes.length; i++) {
            if (currentTime >= classTimes[i].start && currentTime < classTimes[i].end) {
                currentClass = i
                timeLeft = classTimes[i].end - currentTime;
                break;
            }
        }

        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏ –Ω–∞—Ö–æ–¥–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –ø–∞—Ä—ã
        $.getJSON('schedule.json', function (data) {
            if (data[currentDay] && currentClass !== null) {
                const scheduleItem = data[currentDay][currentClass];
                const scheduleIsNotEmpty = scheduleItem !== '&nbsp'

                if (scheduleItem && scheduleIsNotEmpty && timeLeft > 0) {
                    $('#current-class').text(`–¢–µ–∫—É—â–∞—è –ø–∞—Ä–∞ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è —á–µ—Ä–µ–∑ ${timeLeft} –º–∏–Ω`);
                } else {
                    $('#current-class').text('–°–µ–π—á–∞—Å –Ω–µ—Ç –ø–∞—Ä—ã');
                }
            }
        });

        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
        setTimeout(updateCurrentClassInfo, 60000);
    }

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–í—Ç–æ—Ä–Ω–∏–∫, 03.09.2024. –í–µ—Ä—Ö–Ω—è—è –Ω–µ–¥–µ–ª—è"
    function formatDate(date) {
        const daysOfWeek = ["–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ", "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫", "–°—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä–≥", "–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞"];
        const weekTypes = ["–í–µ—Ä—Ö–Ω—è—è", "–ù–∏–∂–Ω—è—è"];

        const day = date.getDate();
        const month = date.getMonth() + 1;
        const year = date.getFullYear();
        const dayOfWeek = daysOfWeek[date.getDay()];

        // –ù–∞—á–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞ –≤–µ—Ä—Ö–Ω–µ–π –Ω–µ–¥–µ–ª–∏
        const startDate = new Date(2025, 0, 20); // 02.09.2024 (—Å–µ–Ω—Ç—è–±—Ä—å = 8, –ø–æ—Ç–æ–º—É —á—Ç–æ –º–µ—Å—è—Ü—ã —Å—á–∏—Ç–∞—é—Ç—Å—è —Å 0)

        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–¥–µ–ª—å, –ø—Ä–æ—à–µ–¥—à–∏—Ö —Å –Ω–∞—á–∞–ª–∞ –ø–µ—Ä–∏–æ–¥–∞
        const diffInDays = Math.floor((date - startDate) / (1000 * 60 * 60 * 24));
        const weekIndex = Math.floor(diffInDays / 7);

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –Ω–µ–¥–µ–ª–∏
        weekType = weekTypes[weekIndex % 2]; // –ß–µ—Ä–µ–¥–æ–≤–∞–Ω–∏–µ –≤–µ—Ä—Ö–Ω–µ–π –∏ –Ω–∏–∂–Ω–µ–π –Ω–µ–¥–µ–ª–∏

        return `${dayOfWeek}, ${String(day).padStart(2, '0')}.${String(month).padStart(2, '0')}.${year}. ${weekType} –Ω–µ–¥–µ–ª—è`;
    }

    updateDateInfo();
    updateCurrentClassInfo();

    function generateDailyScheduleTable(scheduleItems) {
        let tableHtml = '<table class="table table-bordered"><thead><tr><th>#</th><th>–ü—Ä–µ–¥–º–µ—Ç</th><th>–ü—Ä–µ–ø–æ–¥</th><th>–ö–∞–±–∏–Ω–µ—Ç</th></tr></thead><tbody>';
        scheduleItems.forEach((item, index) => {

            let subject_line = item.split('\n');
            let subject = subject_line[0] === undefined ? '&nbsp' : subject_line[0];
            let teacher = subject_line[1] === undefined ? '&nbsp' : subject_line[1];
            let room = subject_line[2] === undefined ? '&nbsp' : subject_line[2];

            let highlighter = '';
            if (item.toLowerCase().includes('–æ–Ω–ª–∞–π–Ω')) {
                highlighter = 'class="online-highlight"';
            } else if (item.toLowerCase().includes('–ª–µ–∫—Ü–∏—è')) {
                highlighter = 'class="lecture-highlight"';
            }

            let current_week_type = (weekType.charAt(0).toLowerCase() === '–≤') ? "–í/–ù" : "–ù/–ù";
            let lineIsEmpty = subject === '&nbsp' && teacher === '&nbsp' && room === '&nbsp';
            let subjectIsRare = subject_line[subject_line.length - 1].includes("–ù/–ù") || subject_line[subject_line.length - 1].includes("–í/–ù")
            let rareSubjectIsOnThisWeek = subject_line[subject_line.length - 1] === current_week_type

            let subjectIsToday = subjectIsRare === rareSubjectIsOnThisWeek;

            if (subjectIsToday && !lineIsEmpty) {
                tableHtml += `<tr><td ${highlighter}>‚Ññ${index + 1} <br>${lecture_time[index]}</br></td><td ${highlighter}>${subject}</td><td ${highlighter}>${teacher}</td><td ${highlighter}>${room}</td></tr>`;
            } else {
                tableHtml += `<tr><td>‚Ññ${index + 1} <br>${lecture_time[index]}</br></td><td colspan="3">&nbsp;</td></tr>`;
            }
        });
        tableHtml += '</tbody></table>';
        return tableHtml;
    }

    function loadSchedule(modalId, key) {
        $.getJSON('schedule.json', function (data) {
            if (data[key]) {
                const scheduleHtml = generateDailyScheduleTable(data[key]);
                $(modalId + ' .modal-body').html(scheduleHtml);
            } else if (key === '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ') {
                $(modalId + ' .modal-body').html('–°–µ–≥–æ–¥–Ω—è –≤—ã—Ö–æ–¥–Ω–æ–π üéâ');
            } else {
                $(modalId + ' .modal-body').html('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–æ');
            }
        });
    }

    function loadTodayOrTomorrow(dateKey) {
        const today = new Date();
        let targetDate = new Date(today);

        const daysOfWeek = ["–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ", "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫", "–°—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä–≥", "–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞"];

        if (dateKey === 'tomorrow') {
            targetDate.setDate(today.getDate() + 1);
            loadSchedule('#nextDayModal', daysOfWeek[targetDate.getDay()]);

        } else {
            loadSchedule('#todayModal', daysOfWeek[targetDate.getDay()]);
        }
    }

    function loadWeekSchedule(modalId) {
        $.getJSON('schedule.json', function (data) {
            const highlighter = 'class="today-highlight"';
            let tableContent = '<table class="table table-bordered"><thead><tr><th>–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏</th><th>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ</th></tr></thead><tbody>';
            const daysOfWeek = ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫", "–°—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä–≥", "–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞", "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"];

            daysOfWeek.forEach(day => {
                if (data[day]) {
                    let miniTable = '<table class="table table-bordered table-sm mb-0"><tbody>';
                    let index = 1
                    data[day].forEach(item => {
                        if (item.trim() !== "") {
                            const parts = item.split('\n');
                            miniTable += `<tr>
                                <td>‚Ññ${index++}</td>
                                <td>${parts[0] || ''}</td>
                                <td>${parts[1] || ''}</td>
                                <td>${parts[2] || ''}</td>
                                <td>${parts[3] || ''}</td>
                            </tr>`;
                        }
                    });
                    miniTable += '</tbody></table>';

                    const todayDate = formatDate(new Date()).split(',')[0];
                    tableContent += `<tr ${day === todayDate ? highlighter : ''}><td>${day}</td><td>${miniTable}</td></tr>`;
                } else {
                    tableContent += `<tr><td>${day}</td><td>–ù–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è</td></tr>`;
                }
            });

            tableContent += '</tbody></table>';
            $(modalId + ' .modal-body').html(tableContent);
        });
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    $('#todayModal').on('show.bs.modal', function () {
        loadTodayOrTomorrow('today');
    });

    $('#nextDayModal').on('show.bs.modal', function () {
        loadTodayOrTomorrow('tomorrow');
    });

    $('#weekModal').on('show.bs.modal', function () {
        loadWeekSchedule('#weekModal');
    });

    $('#customModal').on('show.bs.modal', function () {
        // showCustomMessage('#customModal', '–ö–æ–Ω–µ—Ü —Å–µ—Å—Å–∏–∏!');
        showCustomImage('#customModal', 'weeks.jpg');
        //loadCustomSchedule('#customModal');
    });

    function showCustomMessage(modalId, content) {
        const modal = $(modalId);
        const textElement = $('<p>', {
            alt: 'Custom Text',
            class: 'centered-image',
            text: content
        });

        modal.find('.modal-body').empty().append(textElement);
    }

    function showCustomImage(modalId, imageSrc) {
        const modal = $(modalId);
        const imgElement = $('<img>', {
            src: imageSrc,
            alt: 'Custom Schedule',
            class: 'centered-image'
        });

        modal.find('.modal-body').empty().append(imgElement);
    }

    function loadCustomSchedule(modalId) {
        $.getJSON('army-schedule.json', function (data) {
            let tableContent = '<table class="table table-bordered"><thead><tr><th>–î–∞—Ç–∞</th><th>–í—Ä–µ–º—è</th><th>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ</th></tr></thead><tbody>';
            const highlighter = 'class="today-highlight"';

            Object.keys(data).forEach(day => {
                if (data[day]) {
                    let miniTable = '<table class="table table-bordered table-sm mb-0"><tbody>';
                    let index = 0;
                    data[day].forEach((item) => {
                        if (item.trim() !== "") {
                            miniTable += `<tr>
                                <td>${lecture_time[index] || ''}</td>
                                <td>‚Ññ${++index}</td>
                                <td>${item}</td>
                            </tr>`;
                        }
                    });
                    miniTable += '</tbody></table>';
                    const scheduleDate = day.split(' ')[1].split('.')[0];
                    const todayDate = formatDate(new Date()).split(' ')[1].split('.')[0];
                    console.log(todayDate)

                    tableContent += `<tr ${scheduleDate === todayDate ? highlighter : ''}><td>${day}</td><td colspan="2">${miniTable}</td></tr>`;
                } else {
                    tableContent += `<tr><td>${day}</td><td colspan="2">–ù–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è</td></tr>`;
                }
            });

            tableContent += '</tbody></table>';
            $(modalId + ' .modal-body').html(tableContent);
        });
    }
});
